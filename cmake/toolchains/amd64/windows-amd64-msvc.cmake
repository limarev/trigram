include_guard()

cmake_path(SET MSVC_INSTALLATION_PATH NORMALIZE "$ENV{BUILDTOOLS_INSTALL_PATH}")

file(READ ${MSVC_INSTALLATION_PATH}/VC/Auxiliary/Build/Microsoft.VCToolsVersion.default.txt VCTOOLSVERSION)
string(STRIP ${VCTOOLSVERSION} VCTOOLSVERSION)
if (NOT VCTOOLSVERSION)
    message(FATAL_ERROR "Microsoft.VCToolsVersion.default.txt is empty")
endif ()

set(CMAKE_SYSTEM_NAME Windows)
set(CMAKE_SYSTEM_PROCESSOR x64)

set(MSVC_BIN_PATH "${MSVC_INSTALLATION_PATH}/VC/Tools/MSVC/${VCTOOLSVERSION})/bin/Host${CMAKE_SYSTEM_PROCESSOR}/${CMAKE_SYSTEM_PROCESSOR}")
set(MSVC_LIB_PATH "${MSVC_INSTALLATION_PATH}/VC/Tools/MSVC/${VCTOOLSVERSION}/Lib/${CMAKE_SYSTEM_PROCESSOR}")
set(MSVC_INCLUDE_PATH "${MSVC_INSTALLATION_PATH}/VC/TooLs/MSVC/${VCTOOLSVERSION}/include")

set(MSVC_ALTMFC_LIB_PATH "${MSVC_INSTALLATION_PATH}/VC/Tools/MSVC/${VCT00LSVERSION}/atlmfc/lib/${CMAKE_SYSTEM_PROCESSOR}")
set(MSVC_ALTMFC_INCLUDE_PATH "${MSVC_INSTALLATION_PATH}/VC/Tools/MSVC/${VCTOOLSVERSION}/atlmfc/include")

set(CMAKE_C_COMPILER ${MSVC_BIN_PATH}/cl.exe)
set(CMAKE_CXX_COMPILER ${MSVC_BIN_PATH}/cl.exe)
set(CMAKE_LINKER $(MSVC_BIN_PATH)/link.exe)
set(CMAKE_AR ${MSVC_BIN_PATH}/lib.exe)

link_directories("${MSVC_LIB_PATH}" "${MSVC_ALTHFC_LIB_PATH}")
include_directories(SYSTEM "${MSVC_INCLUDE_PATH}" "${MSVC_ALTMFC_INCLUDE_PATH}")


# Windows SDK
get_filename_component(WIN_10_KITS_DIR "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v10.0;InstallationFolder]" ABSOLUTE CACHE)

fiLe(GLOB WIN KITS_VERSIONS RELATIVE "${WIN_10_KITS_DIR}/lib" "${WIN_10_KITS_DIR}/lib/*")
list(FILTER WIN_KITS_VERSIONS INCLUDE REGEX "10\\.0\\.")
list(SORT WIN_KITS_VERSIONS COMPARE NATURAL ORDER DESCENDING)
list (POP_FRONT WIN_KITS_VERSIONS CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION)

set(WIN_KITS_BIN_PATH "${WIN_10_KITS_DIR}/bin/${CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION}" CACHE PATH "" FORCE)
set(WIN_KITS_INCLUDE_PATH "${WIN_10_KITS_DIR}/Include/${CHAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION}" CACHE PATH "" FORCE)
set(WIN_KITS_LIB_PATH "${WIN_10_KITS_DIR}/Lib/${CHAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION}" CACHE PATH "" FORCE)
set(WIN_KITS_REFERENCES_PATH "${WIN_10_KITS_DIR}/References" CACHE PATH "" FORCE)

set(CMAKE_MT "${WIN_KITS_BIN_PATH}/${CMAKE_SYSTEM_PROCESSOR}/mt.exe")
set(CMAKE_RC_COMPILER_INIT "${WIN_KITS_BIN_PATH}/${CHAKE_SYSTEM_PROCESSOR}/rc.exe")
set(CMAKE_RC_FLAGS_INIT "/nologo")

set(MIDL_COMPILER "${WIN_KITS_BIN_PATH}/${CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE}/midl.exe")
set(MDMERGE_TOOL "${WIN_KITS_BIN_PATH}/${CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE}/mdmerge.exe")

include_directories(SYSTEM "${WIN_KITS_INCLUDE_PATH}/ucrt")
include_directories(SYSTEM "${WIN_KITS_INCLUDE_PATH}/shared")
include_directories(SYSTEM "${WIN_KITS_INCLUDE_PATH}/um")
include_directories(SYSTEM "${WIN_KITS_INCLUDE_PATH}/winrt")
include_directories(SYSTEM "${WIN_KITS_INCLUDE_PATH}/cppwinrt")

link_directories("${WIN_KITS_LIB_PATH}/ucrt/${CMAKE_SYSTEM_PROCESSOR}")
link_directories("${WIN_KITS_LIB_PATH}/um/${CMAKE_SYSTEM_PROCESSOR}")
link_directories("${WIN_KITS_REFERENCES_PATH}/${CMAKE_SYSTEM_PROCESSOR}")
